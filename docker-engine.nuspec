<?xml version="1.0" encoding="utf-8"?>
<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
    <metadata>
        <!-- == PACKAGE SPECIFIC SECTION == -->
        <id>docker-engine</id>
        <version>24.0.7</version>
        <packageSourceUrl>https://github.com/AJDurant/choco-docker-engine</packageSourceUrl>
        <owners>AJDurant</owners>
        <!-- ============================== -->

        <!-- == SOFTWARE SPECIFIC SECTION == -->
        <title>Docker Engine</title>
        <authors>Docker Contributors</authors>
        <projectUrl>https://www.docker.com</projectUrl>
        <iconUrl>https://cdn.statically.io/gh/AJDurant/choco-docker-engine/b09de0d9597f97a074b1c10c0a6589f86fa3a93f/docker.png</iconUrl>
        <copyright></copyright>
        <licenseUrl>http://www.apache.org/licenses/LICENSE-2.0</licenseUrl>
        <requireLicenseAcceptance>true</requireLicenseAcceptance>
        <projectSourceUrl>https://github.com/docker/engine</projectSourceUrl>
        <docsUrl>https://docs.docker.com/engine/</docsUrl>
        <mailingListUrl>https://github.com/docker/docker#talking-to-other-docker-users-and-contributors</mailingListUrl>
        <bugTrackerUrl>https://github.com/moby/moby/issues</bugTrackerUrl>
        <tags>docker devops containers</tags>
        <summary>Docker is an open platform for developers and sysadmins to build, ship, and run distributed applications.</summary>
        <description>Docker is an open platform for developers and sysadmins to build, ship, and run distributed applications. This package contains the docker engine for Windows to run Windows containers on Windows hosts.

NOTE: Docker engine for Windows is is simply the service to run containers. You might want to have a look at the "docker-desktop" package for better usability.

From v23 docker engine is installed into `$env:ProgramFiles\docker` (the default docker location). A shim is still generated for the docker cli.

### Package Specific
This package by default creates the group `docker-users` and adds the installing user to it, you can customise this with package parameters. In order to communicate with docker you will need to log out and back in.

**Please Note**: The docker engine requires the Windows Features: Containers and Microsoft-Hyper-V to be installed in order to function correctly. You can install these with the chocolatey command:
`choco install Containers Microsoft-Hyper-V --source windowsfeatures`

#### Package Parameters
The following package parameters can be set:

 * `/DockerGroup:` - Name of the user group for using docker - defaults to "docker-users"
 * `/noAddGroupUser` - Prevent adding the current user to the DockerGroup
 * `/StartService` - Automatically start (or restart) the docker service after install (or upgrade)

To pass parameters, use `--params "''"` (e.g. `choco install docker-engine [other options] --params="'/DockerGroup:my-docker-group /noAddGroupUser'"`).
To have choco remember parameters on upgrade, be sure to set `choco feature enable -n=useRememberedArgumentsForUpgrades`.

**Please Note**: If you change the DockerGroup having previously installed docker-engine, the `daemon.json` config file will not be overwritten, you will need to manually update it.
        </description>
        <releaseNotes>https://docs.docker.com/engine/release-notes/</releaseNotes>
        <!-- =============================== -->

        <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
        <dependencies>
            <!-- <dependency id="Microsoft-Hyper-V" source="windowsfeatures" />
      <dependency id="Containers" source="windowsfeatures" /> -->
        </dependencies>

        <!--<provides>NOT YET IMPLEMENTED</provides>-->
        <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
        <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
    </metadata>
    <files>
        <file src="tools\**" target="tools" />
    </files>
</package>
